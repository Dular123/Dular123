<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo App</title>
    <style>
        *{
            margin: 0;
            padding: 0;
            font-family:sans-serif;

        }
        html{
            color: white;
            font-size: 62.5%;
        }
        body{
            width: 100%;
            height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 100px;
            background-color: #1b1b1d;
        }
        .main_todo_div{
            width: 36rem;
            display: grid;
            grid-template-columns: 1fr 0.3fr;
            align-items: center;
            height: auto;
        }
        li{
            cursor: pointer;
            list-style-type: circle;
            margin: 0.2rem;
            text-transform: capitalize;
            font-weight: 500;
            li:hoover{
                color: #feac5e;
            };
        }
        h1{
            font-size: 3.6rem;
            margin-top: 4.8rem;
            color: white;
        }
        button{
            height: 3rem;
        }
        hr{
            margin-bottom: 3.2rem;
        }
        p,
        li,
        button{
           font-size: 1.0rem;
           letter-spacing: 0.1rem;
           line-height: 1.4;
        }
        input{
            padding: 6px 2px;
            min-width: 32rem;
            font-size: 18px;
            border-radius: 0.6rem;
            border: none;
            margin-right: 1.2rem;
        }
        li:hover + .deleteBtn {
            box-shadow: inset 0 0 0 0.2rem #f5ee62;
            background-color: transparent;
            color: #f5ee62;
            
        }
        button{
            background-color: #f5ee62;
            padding: 0.6rem 2.4rem;
            border-radius: 10rem;
            margin-right: 3.6rem;
            cursor: pointer;
            transition: all 0.3s linear;
        }
        button:hover 
            {
            color: #f5ee62;
            box-shadow: inset 0 0 0.2rem #f5ee62; /* Apply box shadow on hover */
            background-color: transparent;
        }
    </style>
</head>
<body>
    <h1>TODO List</h1>
    <br/>
    <form>
        <div>
            <input type="text" id="inputvalues">
            <button class="btn">Add Todo</button>
        </div>
        <section class="todo-list-elem"></section>
    </form>
    <script>
        const mainTodoElem = document.querySelector(".todo-list-elem");
        const inputValues = document.getElementById("inputvalues");
         const getTodoList=() => {
            return JSON.parse(localStorage.getItem("localstoagedata"));
         };

         const addTodoListLocalStorage=(localTodoList)=>{
          return localStorage.setItem("localstoagedata",JSON.stringify(localTodoList));

         };

         let localTodoList = getTodoList( ) || [];

         const addTodoDynamicElement=(currElem) =>{
            const divElement= document.createElement("div");
           divElement.classList.add("main_todo_div");
           divElement.innerHTML = `<li>${currElem}</li> <button class="deleteBtn">Delete</button>`;
           mainTodoElem.append(divElement);
            };
           
        const addTodoList=(e) => {
          e.preventDefault();
           const todoListValue=inputValues.value.trim();
           inputValues.value = " " ;
           if(todoListValue !== "" && !localTodoList.includes(todoListValue)){
           localTodoList.push(todoListValue);
           localTodoList = [...new Set(localTodoList)];
           console.log(localTodoList);
           localStorage.setItem("localstoagedata",JSON.stringify(localTodoList));

           addTodoDynamicElement(todoListValue);
           }
         };
          const showTodoList = ( ) => {
              console.log(localTodoList);
              localTodoList.forEach((currElem)=>{
                addTodoDynamicElement(currElem);
              })
                
              };
               const removeTodoElem = (e) => {
                const todoToRemove=e.target;
                let todoListContent= todoToRemove.previousElementSibling.innerText;
                let parentElem=todoToRemove.parentElement;
                console.log(todoListContent);
                localTodoList=localTodoList.filter((curTodo)=>{
                return curTodo !== todoListContent.toLowerCase();
                });



                addTodoListLocalStorage(localTodoList);
                parentElem.remove();
                console.log(localTodoList);
               };

             mainTodoElem.addEventListener("click", (e)=>{
                e.preventDefault();
                if(e.target.classList.contains("deleteBtn")){
                removeTodoElem(e);
                }
             })


        showTodoList();
        document.querySelector(".btn").addEventListener("click",(e) => {
            addTodoList(e);
        });
    </script>
</body>
</html>
